<?xml version="1.0" encoding="UTF-8"?>

<!--este archivo es XSD, es algo que nos ayuda a validar si nuestras solicitudes son correctas o 
no, este es un archivo de tipo XMLSchema.
targetNamespace, indica el nombre que debe usar el XML que se creara.
:tns, se convierte en un atajo para utilizar targetNamespace.
	<schema>,<element>,.... son parte de namespace predeterminados, en XSD es buena practica 
establerles un prefijo y ha este esquema le ponemos el prefijo xs: 
	usaremos JAXB que hara es tomar el  XSD que hemos creado, lo tomara y creara objetos Java 
y los java objetos se utilizara en nuestro proyecto para ponerle valores. Pero para hacer todo esto
se requiere colocar en pom.xml un JAXB Maven plugin-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://gn.com/courses" 
xmlns:tns="http://gn.com/courses" elementFormDefault="qualified">

	<xs:element name="GetCourseDetailsRequest">
		<!-- cuando un element quire contener otro elementos debe crearse complexType, este tipo pued
		definir una sencuencia de cosas  -->
		<xs:complexType>
			<!-- los sequence puede contener elementos -->
			<xs:sequence>
				<xs:element name= "id" type="xs:integer"></xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="GetCourseDetailsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name= "CourseDetails" type="tns:CourseDetails"></xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
		
	<xs:complexType name="CourseDetails">
			<!-- los sequence puede contener elementos -->
			<xs:sequence>
				<xs:element name= "id" type= "xs:integer"></xs:element>
				<xs:element name= "name" type= "xs:string"></xs:element>
				<xs:element name= "description" type="xs:string"></xs:element>
			</xs:sequence>
	</xs:complexType>
</xs:schema>

